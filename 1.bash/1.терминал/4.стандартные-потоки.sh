# В Linux есть три стандартных потока:
# stdout
# stderr
# stdin
# Когда вы выполняли команду ls, у вас был вывод в консоли — это и есть stdout.
# Если выполнить команду sl, появится ошибка, и её вывод будет направлен в stderr.
# Когда команда требует дополнительного ввода со стороны пользователя, это stdin.


# stdout
# Обычный вывод в консоль.
# Чтобы самому создать вывод в консоль, есть команда echo:
echo 'Hello World!'  # Эта команда выведет в консоль, в stdout, надпись 'Hello World!'.
# Самый частый сценарий применения этой команды в терминале — проверка содержания переменной.
# Например:
SOME_VAR='Hello there!'
echo $SOME_VAR  # Эта команда выведет 'Hello there!'.

# Эти выводы можно перенаправлять.
# Делается это операторами > и >>.
# Например:
echo 'Hi file!' > ./example_file.txt
# Вывод этой команды перенаправится в файл ./example_file.txt, тем самым записав эту строку в файл.
# > — стирает содержимое файла.
# >> — дописывает содержимое вывода в конец файла, не стирая предыдущие записи.

# Бывают ситуации, когда нужно, чтобы вывода в консоль не было вовсе,
# и вывод никуда не направлялся. В этих случаях используют следующую конструкцию:
echo "This message will be ignored" > /dev/null


# stderr
# Выводит ошибки.
# Если выполнить sl > file.txt, то в файл ничего не запишется, 
# а в консоль выведется информация об ошибке.
# Чтобы управлять выводом ошибок, следует использовать конструкцию 2>:
sl 2> errors.txt  # в данном примере вывод "2>" отработает, так как команды sl не существует


# stdin
# Требует ввода данных со стороны пользователя.
# Обычно он используется в рамках скриптов на Bash.
read USER_INPUT  # Ждёт ввода от пользователя.
echo "Вы ввели: $USER_INPUT"